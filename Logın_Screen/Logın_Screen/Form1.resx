<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>